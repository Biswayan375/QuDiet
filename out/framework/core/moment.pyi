from qudiet.circuit_library.standard_gates.cx import CXGate as CXGate
from qudiet.circuit_library.standard_gates.h import HGate as HGate
from qudiet.circuit_library.standard_gates.i import IGate as IGate
from qudiet.circuit_library.standard_gates.quantum_gate import QuantumGate as QuantumGate
from qudiet.circuit_library.standard_gates.x import XGate as XGate
from qudiet.circuit_library.standard_gates.z import ZGate as ZGate
from qudiet.core.init_states import InitState as InitState
from scipy import sparse as sparse
from typing import Union

class Moment:
    def __init__(self, *args: Union[QuantumGate, InitState, IGate]) -> None: ...
    @property
    def prev_pointer(self): ...
    @prev_pointer.setter
    def prev_pointer(self, pointer) -> None: ...
    @property
    def next_pointer(self): ...
    @next_pointer.setter
    def next_pointer(self, pointer) -> None: ...
    def check_igate_at_qreg(self, gate_obj: Union[HGate, XGate, ZGate, CXGate]) -> bool: ...
    def replace_igate(self, gate_obj: Union[HGate, XGate, ZGate]) -> bool: ...
    def peek_list(self) -> list: ...
    def exec(self, backend): ...
